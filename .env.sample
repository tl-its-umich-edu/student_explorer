### General (Databases, Django, Authentication, Caching)

# Default database values
DJANGO_DB_ENGINE=django.db.backends.mysql
DJANGO_DB_NAME=student_explorer
DJANGO_DB_USER=student_explorer
DJANGO_DB_PASSWORD=student_explorer
DJANGO_DB_HOST=student_explorer_mysql
DJANGO_DB_PORT=3306

DJANGO_SEUMICH_DB_ENGINE=django.db.backends.mysql
DJANGO_SEUMICH_DB_NAME=student_explorer
DJANGO_SEUMICH_DB_USER=student_explorer
DJANGO_SEUMICH_DB_PASSWORD=student_explorer
DJANGO_SEUMICH_DB_HOST=student_explorer_mysql
DJANGO_SEUMICH_DB_PORT=3306

# Prefix to idenity Student Explorer emails
EMAIL_SUBJECT_PREFIX=Student_Explorer
MYSQL_ROOT_PASSWORD=root
DJANGO_DEBUG=true

# Debug level can conflict with Django Debug Toolbar
DJANGO_LOGGING_LEVEL=INFO

# department affiliation string from MCommunity settings
DEPT_AFFILIATION

# Uncomment these values and define the location and options of the cache 
# if you want to enable Redis (or other) caching

# Django supports many different caches please see the documentation
# https://docs.djangoproject.com/en/1.11/topics/cache/
#
# Redis and django_mysql are included in requirements.txt

# Default value in seconds for how long to cache (Default 600)
# CACHE_TTL=600

# Default Key Prefix (as part of the key/value pair)
# CACHE_KEY_PREFIX=student_explorer
 
# Redis, Database LocMem and others are supported
# If you don't want any cache set this to 
# django.core.cache.backends.dummy.DummyCache 

# Possible Options (Others in django.core may be supported)
# Only uncomment one CACHE_BACKEND and one CACHE_LOCATION
# ** DummyCache - doesn't do anything 
# CACHE_BACKEND=django.core.cache.backends.dummy.DummyCache 
# CACHE_LOCATION=

# ** Redis, the CACHE_LOCATION is the server and port
# CACHE_BACKEND=django_redis.cache.RedisCache
# CACHE_LOCATION=redis://student_explorer_redis:6379/1

# ** Database CACHE_LOCATION is a table name in the 'default' database (MySQL)
# This table is created automatically and could be anything.
# CACHE_BACKEND=django.core.cache.backends.db.DatabaseCache
# CACHE_LOCATION=se_view_cache

# ** MySQL CACHE_LOCATION is created by a migration and has to be this table
# This library supports CACHE_OPTIONS, see this for more info:
# https://django-mysql.readthedocs.io/en/latest/cache.html
# CACHE_BACKEND=django_mysql.cache.MySQLCache
# CACHE_LOCATION=django_mysql_cache

# These are additional options (only required for Redis)
# JSON formatted options to pass (optional)
# For Redis you might have
# CACHE_OPTIONS={"CLIENT_CLASS": "django_redis.client.DefaultClient"}

# For django_mysql you might want these options. 
# To turn compression off set COMPRESS_MIN_LENGTH to 0
# CACHE_OPTIONS={"COMPRESS_MIN_LENGTH": 5000, "COMPRESS_LEVEL": 6}


### Cron Pod Settings
# (Student Explorer does not currently use a cron job. These comments have been retained in case we move in the future
# back to such an approach.)

# All of these settings go together and need to be enabled to configure the cron pod
# set this to be true on OpenShift pod for running cron job.
# RUN_AT_TIMES and CRONTAB_SCHEDULE have no affect otherwise.
# IS_CRON_POD=
# Time to run cron CSV separated times in HH:MM format.
# An example is 02:00,04:00 to run at 2AM and 4AM
# RUN_AT_TIMES=

# Time to run system cron
# An example to match the above would be 0 2,4 * * *
# This should run as frequently or more frequently than RUN_AT_TIMES
# Use https://crontab.guru to validate your schedule
# CRONTAB_SCHEDULE=

# credentials to use Python APIUtils library. This is needed to run the cron job
# https://github.com/tl-its-umich-edu/api-utils-python
# APIUTIL_URL=
# APIUTIL_KEY=
# APIUTIL_SECRET=

# URL pattern for course
# https://xxxx/courses/
# CANVAS_COURSE_URL_PREFIX=